<?php

/**
 * @file
 * Install, uninstall and update hooks for os2web_spotbox module.
 */

use Drupal\field\Entity\FieldStorageConfig;
use Symfony\Component\Yaml\Yaml;
use Drupal\field\Entity\FieldConfig;
use Drupal\paragraphs\Entity\ParagraphsType;
use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\Core\Entity\Entity\EntityViewDisplay;
use Drupal\taxonomy\Entity\Vocabulary;
use Drupal\Core\Entity\Entity\EntityViewMode;

/**
 * Reads in new configuration.
 *
 * @param string $config_name
 *   Configuration name.
 */
function os2web_spotbox_read_in_new_config($config_name) {
  $path = drupal_get_path('module', 'os2web_spotbox');
  /** @var \Drupal\Core\Config\StorageInterface $active_storage */
  $active_storage = \Drupal::service('config.storage');
  $active_storage->write($config_name, Yaml::parse(file_get_contents($path . '/config/optional/' . $config_name . '.yml')));
}

/**
 * Updates os2web_spotbox entity fields.
 */
function os2web_spotbox_update_8002() {
  // Remove outdated fields.
  $fields = [
    'field_os2web_spotbox_link_ext',
    'field_os2web_spotbox_link_int',
    'field_os2web_spotbox_link_title',
    'field_os2web_spotbox_link',
  ];
  foreach ($fields as $field_name) {
    $field = \Drupal::entityTypeManager()
      ->getStorage('field_config')
      ->load('os2web_spotbox.os2web_spotbox.' . $field_name);
    if (empty($field)) {
      \Drupal::messenger()->addWarning(t('Field :field not found', [':field' => $field_name]));
      continue;
    }
    $field->delete();
    field_purge_field($field);
  }

  // Add new fields.
  $path = drupal_get_path('module', 'os2web_spotbox');
  // Create field storage.
  $field_storage_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.storage.os2web_spotbox.field_os2web_spotbox_link.yml'));
  if (!FieldStorageConfig::loadByName($field_storage_yml['entity_type'], $field_storage_yml['field_name'])) {
    FieldStorageConfig::create($field_storage_yml)->save();
  }
  // Create field instance.
  $field_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.field.os2web_spotbox.os2web_spotbox.field_os2web_spotbox_link.yml'));
  if (!FieldConfig::loadByName($field_yml['entity_type'], $field_yml['bundle'], $field_yml['field_name'])) {
    FieldConfig::create($field_yml)->save();
  }
}

/**
 * Updates os2web_spotbox form.
 */
function os2web_spotbox_update_8003() {
  os2web_spotbox_read_in_new_config('core.entity_view_mode.media.os2web_spotbox');
  os2web_spotbox_read_in_new_config('core.entity_view_display.media.image.os2web_spotbox');

  \Drupal::service('module_installer')->install(['media_library']);
  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.os2web_spotbox.os2web_spotbox.default',
    'entity_form_display',
    'os2web_spotbox.os2web_spotbox.default', [
      'field_os2web_spotbox_image' => 'content.field_os2web_spotbox_image',
      'field_os2web_spotbox_link' => 'content.field_os2web_spotbox_link',
      'field_os2web_spotbox_link_butt' => 'content.field_os2web_spotbox_link_butt',
      'field_os2web_spotbox_link_text' => 'content.field_os2web_spotbox_link_text',
      'field_os2web_spotbox_video' => 'content.field_os2web_spotbox_video',
    ]);
  os2web_spotbox_update_entity_from_yml(
    'core.entity_view_display.os2web_spotbox.os2web_spotbox.default',
    'entity_view_display',
    'os2web_spotbox.os2web_spotbox.default', [
      'field_os2web_spotbox_image' => 'content.field_os2web_spotbox_image',
      'field_os2web_spotbox_link' => 'content.field_os2web_spotbox_link',
      'field_os2web_spotbox_link_butt' => 'content.field_os2web_spotbox_link_butt',
      'field_os2web_spotbox_link_text' => 'content.field_os2web_spotbox_link_text',
      'field_os2web_spotbox_video' => 'content.field_os2web_spotbox_video',
    ]);

}

/**
 * Add new fields to os2web_spotbox paragraph.
 */
function os2web_spotbox_update_8004() {
  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.paragraph.os2web_spotbox.default',
    'entity_form_display',
    'paragraph.os2web_spotbox.default', [
      'field_os2web_spotbox' => 'content.field_os2web_spotbox',
    ]);

  os2web_spotbox_update_entity_from_yml(
    'core.entity_view_display.paragraph.os2web_spotbox.default',
    'entity_view_display',
    'paragraph.os2web_spotbox.default', [
      'field_os2web_spotbox' => 'content.field_os2web_spotbox',
    ]);
}

/**
 * Update os2web_spotbox entity image field.
 */
function os2web_spotbox_update_8005() {
  // Remove outdated fields.
  $fields = [
    'field_os2web_spotbox_image',
  ];
  foreach ($fields as $field_name) {
    $field = \Drupal::entityTypeManager()
      ->getStorage('field_config')
      ->load('os2web_spotbox.os2web_spotbox.' . $field_name);
    if (empty($field)) {
      \Drupal::messenger()->addWarning(t('Field :field not found', [':field' => $field_name]));
      continue;
    }
    $field->delete();
    field_purge_field($field);
  }

  // Add new fields.
  $path = drupal_get_path('module', 'os2web_spotbox');
  // Create field storage.
  $field_storage_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.storage.os2web_spotbox.field_os2web_spotbox_bg_image.yml'));
  if (!FieldStorageConfig::loadByName($field_storage_yml['entity_type'], $field_storage_yml['field_name'])) {
    FieldStorageConfig::create($field_storage_yml)->save();
  }
  // Create field instance.
  $field_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.field.os2web_spotbox.os2web_spotbox.field_os2web_spotbox_bg_image.yml'));
  if (!FieldConfig::loadByName($field_yml['entity_type'], $field_yml['bundle'], $field_yml['field_name'])) {
    FieldConfig::create($field_yml)->save();
  }

  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.os2web_spotbox.os2web_spotbox.default',
    'entity_form_display',
    'os2web_spotbox.os2web_spotbox.default', [
      'field_os2web_spotbox_bg_image' => 'content.field_os2web_spotbox_bg_image',
    ]);

  os2web_spotbox_update_entity_from_yml(
    'core.entity_view_display.os2web_spotbox.os2web_spotbox.default',
    'entity_view_display',
    'os2web_spotbox.os2web_spotbox.default', [
      'field_os2web_spotbox_bg_image' => 'content.field_os2web_spotbox_bg_image',
    ]);

}

/**
 * Adding background color to os2web_spotbox entity.
 */
function os2web_spotbox_update_8006(&$sandbox) {
  $definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $last_installed_schema_repository */
  $last_installed_schema_repository = \Drupal::service('entity.last_installed_schema.repository');

  $entity_type = $definition_update_manager->getEntityType('os2web_spotbox');
  $field_storage_definitions = $last_installed_schema_repository->getLastInstalledFieldStorageDefinitions('os2web_spotbox');

  $allowed_values = [
    'transparent' => t('Ingen'),
    'primary' => t('Primær'),
    'secondary' => t('Sekundær'),
    'tertiary' => t('Tertiær'),
  ];
  $field_storage_definitions['background_color'] = \Drupal\Core\Field\BaseFieldDefinition::create('list_string')
    ->setLabel(t('Baggrundfarve'))
    ->setDescription(t('Vælg baggrundsfarve.'))
    ->setName('background_color')
    ->setTargetEntityTypeId('os2web_spotbox')
    ->setTargetBundle(NULL)
    ->setRequired(TRUE)
    ->setDefaultValue('transparent')
    ->setReadOnly(TRUE)
    ->setDisplayOptions('form', [
      'type' => 'options_select',
    ])
    ->setSetting('allowed_values', $allowed_values)
    ->setDisplayConfigurable('form', TRUE);
  $definition_update_manager->updateFieldableEntityType($entity_type, $field_storage_definitions, $sandbox);
}

/**
 * Adding os2web_spotbox_reference paragraph to existing installation.
 */
function os2web_spotbox_update_8901() {
  $path = drupal_get_path('module', 'os2web_spotbox');

  // Create Paragraph.
  $paragraph_yml = Yaml::parse(file_get_contents($path . '/config/optional/paragraphs.paragraphs_type.os2web_spotbox_reference.yml'));
  if (!ParagraphsType::load('os2web_spotbox_reference')) {
    ParagraphsType::create($paragraph_yml)->save();
  }

  $fields = [
    'field_os2web_spotbox_reference_h',
    'field_os2web_spotbox_reference',
    'field_os2web_spotbox_ref_subhead',
    'field_os2web_spotbox_ref_display',
  ];
  // Add new fields.
  foreach ($fields as $field) {
    // Create field storage.
    $field_storage_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.storage.paragraph.' . $field . '.yml'));
    if (!empty(($field_storage_yml['settings']['allowed_values']))) {
      // Adjusting allowed values options.
      $allowed_values = [];
      foreach ($field_storage_yml['settings']['allowed_values'] as $option) {
        $allowed_values[$option['value']] = $option['label'];
      }
      $field_storage_yml['settings']['allowed_values'] = $allowed_values;
    }
    if (!FieldStorageConfig::loadByName($field_storage_yml['entity_type'], $field_storage_yml['field_name'])) {
      FieldStorageConfig::create($field_storage_yml)->save();
    }
    // Create field instance.
    $field_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.field.paragraph.os2web_spotbox_reference.' . $field . '.yml'));
    if (!FieldConfig::loadByName($field_yml['entity_type'], $field_yml['bundle'], $field_yml['field_name'])) {
      FieldConfig::create($field_yml)->save();
    }
  }

  // Create/update form display.
  $efd_id = 'paragraph.os2web_spotbox_reference.default';
  $efd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_form_display.' . $efd_id . '.yml'));
  if (!EntityFormDisplay::load($efd_id)) {
    EntityFormDisplay::create($efd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_form_display.' . $efd_id,
      'entity_form_display',
      $efd_id, [
        'field_os2web_spotbox_reference_h' => 'content.field_os2web_spotbox_reference_h',
        'field_os2web_spotbox_reference' => 'content.field_os2web_spotbox_reference',
        'field_os2web_spotbox_ref_subhead' => 'content.field_os2web_spotbox_ref_subhead',
        'field_os2web_spotbox_ref_display' => 'content.field_os2web_spotbox_ref_display',
        'hidden' => 'hidden',
      ]);
  }

  // Create/update view display.
  $evd_id = 'paragraph.os2web_spotbox_reference.default';
  $evd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_view_display.' . $evd_id . '.yml'));
  if (!EntityViewDisplay::load($evd_id)) {
    EntityViewDisplay::create($evd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_view_display.' . $evd_id,
      'entity_view_display',
      $evd_id, [
        $field => 'content.' . $field,
        'field_os2web_spotbox_reference_h' => 'content.field_os2web_spotbox_reference_h',
        'field_os2web_spotbox_reference' => 'content.field_os2web_spotbox_reference',
        'field_os2web_spotbox_ref_subhead' => 'content.field_os2web_spotbox_ref_subhead',
        'hidden' => 'hidden',
      ]);
  }

  // Create/update view display.
  $evd_id = 'paragraph.os2web_spotbox_reference.preview';
  $evd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_view_display.' . $evd_id . '.yml'));
  if (!EntityViewDisplay::load($evd_id)) {
    EntityViewDisplay::create($evd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_view_display.' . $evd_id,
      'entity_view_display',
      $evd_id, [
        $field => 'content.' . $field,
        'field_os2web_spotbox_reference_h' => 'content.field_os2web_spotbox_reference_h',
        'field_os2web_spotbox_reference' => 'content.field_os2web_spotbox_reference',
        'field_os2web_spotbox_ref_subhead' => 'content.field_os2web_spotbox_ref_subhead',
        'hidden' => 'hidden',
      ]);
  }
}

/**
 * Update os2web_spotbox paragraphs form entity widget.
 */
function os2web_spotbox_update_8902() {
  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.paragraph.os2web_spotbox.default',
    'entity_form_display',
    'paragraph.os2web_spotbox.default', [
      'field_os2web_spotbox' => 'content.field_os2web_spotbox',
    ]);
  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.paragraph.os2web_spotbox_reference.default',
    'entity_form_display',
    'paragraph.os2web_spotbox_reference.default', [
      'field_os2web_spotbox_reference' => 'content.field_os2web_spotbox_reference',
    ]);
}

/**
 * Update os2web_spotbox paragraphs form entity widget.
 */
function os2web_spotbox_update_8903() {
  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.paragraph.os2web_spotbox_reference.default',
    'entity_form_display',
    'paragraph.os2web_spotbox_reference.default', [
      'field_os2web_spotbox_reference' => 'content.field_os2web_spotbox_reference',
    ]);
}

/**
 * Add icon reference to os2web_spotbox paragraphs.
 */
function os2web_spotbox_update_8904() {
  \Drupal::service('module_installer')->install(['svg_image']);

  $path = drupal_get_path('module', 'os2web_spotbox');

  // Add taxonomy vocabulary.
  if (empty(Vocabulary::load('os2web_icons'))) {
    os2web_spotbox_read_in_new_config('taxonomy.vocabulary.os2web_icons');
  }

  // Create icon field storage.
  $field_storage_yml = Yaml::parse(file_get_contents($path . "/config/optional/field.storage.taxonomy_term.field_os2web_icon_file.yml"));
  if (!FieldStorageConfig::loadByName($field_storage_yml['entity_type'], $field_storage_yml['field_name'])) {
    FieldStorageConfig::create($field_storage_yml)->save();
  }
  // Create icon field instance.
  $field_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.field.taxonomy_term.os2web_icons.field_os2web_icon_file.yml'));
  if (!FieldConfig::loadByName($field_yml['entity_type'], $field_yml['bundle'], $field_yml['field_name'])) {
    FieldConfig::create($field_yml)->save();
  }

  // Create icon reference field storage.
  $field_storage_yml = Yaml::parse(file_get_contents($path . "/config/optional/field.storage.os2web_spotbox.field_os2web_spotbox_icon.yml"));
  if (!FieldStorageConfig::loadByName($field_storage_yml['entity_type'], $field_storage_yml['field_name'])) {
    FieldStorageConfig::create($field_storage_yml)->save();
  }
  // Create icon reference field instance.
  $field_yml = Yaml::parse(file_get_contents($path . '/config/optional/field.field.os2web_spotbox.os2web_spotbox.field_os2web_spotbox_icon.yml'));
  if (!FieldConfig::loadByName($field_yml['entity_type'], $field_yml['bundle'], $field_yml['field_name'])) {
    FieldConfig::create($field_yml)->save();
  }

  drupal_flush_all_caches();

  // Create/update form view for icon file.
  $efd_id = 'taxonomy_term.os2web_icons.default';
  $efd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_form_display.' . $efd_id . '.yml'));
  if (!EntityViewDisplay::load($efd_id)) {
    EntityViewDisplay::create($efd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_form_display.' . $efd_id,
      'entity_form_display',
      $efd_id, [
      'field_os2web_icon_file' => 'content.field_os2web_icon_file',
      'hidden' => 'hidden',
    ]);
  }

  // Create/update default display view for icon file.
  $evd_id = 'taxonomy_term.os2web_icons.default';
  $evd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_view_display.' . $evd_id . '.yml'));
  if (!EntityViewDisplay::load($evd_id)) {
    EntityViewDisplay::create($evd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_view_display.' . $evd_id,
      'entity_view_display',
      $evd_id, [
      'field_os2web_icon_file' => 'content.field_os2web_icon_file',
      'hidden' => 'hidden',
    ]);
  }

  // Create/update preview display view for icon file.
  $evd_id = 'taxonomy_term.os2web_icons.preview';
  $evd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_view_display.' . $evd_id . '.yml'));
  if (!EntityViewDisplay::load($evd_id)) {
    if (empty(EntityViewMode::load('taxonomy_term.preview'))) {
      os2web_spotbox_read_in_new_config('core.entity_view_mode.taxonomy_term.preview');
    }
    EntityViewDisplay::create($evd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_view_display.' . $evd_id,
      'entity_view_display',
      $evd_id, [
      'field_os2web_icon_file' => 'content.field_os2web_icon_file',
    ]);
  }

  // Update form view mode with icon reference field settings.
  os2web_spotbox_update_entity_from_yml(
    'core.entity_form_display.os2web_spotbox.os2web_spotbox.default',
    'entity_form_display',
    'os2web_spotbox.os2web_spotbox.default', [
    'field_os2web_spotbox_icon' => 'content.field_os2web_spotbox_icon',
  ]);

  // Update display view with icon reference field settings.
  // Default display view mode.
  os2web_spotbox_update_entity_from_yml(
    'core.entity_view_display.os2web_spotbox.os2web_spotbox.default',
    'entity_view_display',
    'os2web_spotbox.os2web_spotbox.default', [
    'field_os2web_spotbox_icon' => 'content.field_os2web_spotbox_icon',
  ]);
  // Create/update preview display view.
  $evd_id = 'os2web_spotbox.os2web_spotbox.preview';
  $evd_yml = Yaml::parse(file_get_contents($path . '/config/optional/core.entity_view_display.' . $evd_id . '.yml'));
  if (!EntityViewDisplay::load($evd_id)) {
    if (empty(EntityViewMode::load('os2web_spotbox.preview'))) {
      os2web_spotbox_read_in_new_config('core.entity_view_mode.os2web_spotbox.preview');
    }
    EntityViewDisplay::create($evd_yml)->save();
  }
  else {
    os2web_spotbox_update_entity_from_yml(
      'core.entity_view_display.' . $evd_id,
      'entity_view_display',
      $evd_id, [
      'field_os2web_spotbox_icon' => 'content.field_os2web_spotbox_icon',
    ]);
  }
}
